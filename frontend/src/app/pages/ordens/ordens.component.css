.container {
  max-width: 90%;
  margin: 2rem auto;
  padding: 1.5rem;
  font-family: 'Segoe UI', sans-serif;
  color: var(--text-color);
  background-color: var(--card-dark);
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
}

h2 {
  text-align: center;
  margin-bottom: 2.5rem;
  font-size: 2.2rem;
  color: var(--text-white);
}

.filters {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  justify-content: space-between;
  margin-bottom: 2rem;
  align-items: center;
}

.search-field {
  flex-grow: 1;
  min-width: 250px;
  color: var(--text-color);
}

mat-form-field {
  width: 100%;
  color: var(--text-color);
}

.filters button {
  background-color: var(--primary-color);
  color: var(--text-white);
  border: none;
  padding: 0.8rem 1.2rem;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.3s ease;
}

.filters button:hover {
  background-color: var(--primary-hover);
}

.orders-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
}

.order-card {
  background-color: var(--card-dark);
  border: 1px solid var(--card-border);
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  text-align: start;
}

.order-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
}

.order-card h3 {
  margin-top: 0;
  font-size: 1.3rem;
  margin-bottom: 1rem;
  color: var(--text-white);
}

.order-card p {
  margin: 0.4rem 0;
  font-size: 0.95rem;
  color: var(--text-grey);
  line-height: 1.4;
}

.order-card strong {
  color: var(--primary-color);
}

.card-actions {
  display: flex;
  gap: 0.8rem;
  justify-content: flex-end;
  margin-top: 1.5rem;
}

.update-button,
.delete-button {
  background-color: var(--success-color);
  color: var(--text-white);
  border: none;
  padding: 0.6rem 1rem;
  border-radius: 6px;
  font-size: 0.85rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.delete-button {
  background-color: var(--alert-red);
}

.update-button img,
.delete-button img {
  width: 18px;
  height: 18px;
  object-fit: contain;
}

.update-button:hover {
  background-color: var(--success-hover);
}

.delete-button:hover {
  background-color: var(--alert-hover);
}


@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(15px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal {
  background: var(--card-dark);
  padding: 2rem;
  border-radius: 1rem;
  width: 100%;
  max-width: 600px;
  color: var(--text-white);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.6);
  max-height: 80vh;
  overflow-y: auto;
  animation: fadeInUp 0.4s ease-in-out;
  border: 1px solid var(--card-border);
  backdrop-filter: blur(8px);
}

.modal h2 {
  color: var(--primary-color);
  font-size: 1.75rem;
  margin-bottom: 1.5rem;
  font-weight: 600;
}

.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  margin-top: 2rem;
}

.modal-actions button {
  padding: 0.6rem 1.3rem;
  font-weight: 600;
  border-radius: 8px;
  font-size: 0.95rem;
  transition: all 0.3s ease;
}

.modal-actions button[color="primary"] {
  background-color: var(--success-color);
  color: var(--text-white);
}

.modal-actions button[color="primary"]:hover {
  background-color: var(--success-hover);
}

.modal-actions button[color="warn"] {
  background-color: var(--alert-red);
  color: var(--text-white);
}

.modal-actions button[color="warn"]:hover {
  background-color: var(--alert-hover);
}

.modal ::ng-deep input,
.modal ::ng-deep textarea,
.modal ::ng-deep mat-select {
  color: var(--text-white);
  background-color: transparent;
  border-color: var(--card-border);
}

.modal ::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex {
  background-color: rgba(255, 255, 255, 0.05);
}

.modal ::ng-deep .mat-form-field-label {
  color: var(--text-grey);
}

.error {
  color: var(--alert-red);
  margin-top: 1.5rem;
  text-align: center;
}

.order-card.proximo-do-prazo {
  background-color: #ffdddd;
  border-color: #ffaaaa;
}

.order-card.proximo-do-prazo h3,
.order-card.proximo-do-prazo p,
.order-card.proximo-do-prazo strong {
  color: #333;
}

.mat-select-panel {
  background-color: var(--card-dark) !important;
  color: var(--text-color) !important;
}

.mat-option {
  color: var(--text-color) !important;
}

.mat-option:hover {
  background-color: var(--option-hover) !important;
}


.mdc-list-item {
  background-color: var(--card-dark) !important;
  color: var(--text-color) !important;
}

.critical-dot {
  width: 12px;
  height: 12px;
  background-color: var(--alert-red);
  border-radius: 50%;
  position: absolute;
  top: 12px;
  right: 12px;
  box-shadow: 0 0 0 rgba(244, 67, 54, 0.7);
  animation: pulse-dot 1.5s infinite;
}

@keyframes pulse-dot {
  0% {
    box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.6);
    transform: scale(1);
  }

  70% {
    box-shadow: 0 0 0 8px rgba(244, 67, 54, 0);
    transform: scale(1.2);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(244, 67, 54, 0);
    transform: scale(1);
  }
}

::ng-deep .mat-datepicker-content {
  background-color: #2c2c2c !important;
  color: white !important;
  border: 2px solid black;
  margin-left: 50%;
}

::ng-deep .mat-calendar-body-cell-content {
  color: var(--text-white);
}

::ng-deep .mat-calendar-body-selected {
  background-color: white;
  color: white !important;
}

::ng-deep .mat-calendar-arrow {
  color: var(--text-white);
}

::ng-deep .mat-calendar-period-button,
::ng-deep .mat-calendar-previous-button,
::ng-deep .mat-calendar-next-button {
  color: var(--text-white);
}